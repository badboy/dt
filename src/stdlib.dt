### Binding ###

[ swap quote [ do ] concat swap def! ] \def def!

[ : ] \-> def
[ def? not ] \undef? def


### Display ###

[ p nl ] \pl def
[ p ] \print def
[ pl ] \println def
[ \pl each ] \pls def

[ ep enl ] \epl def
[ ep ] \eprint def
[ epl ] \eprintln def
[ \epl each ] \epls def

[ .s ] \status def


### Filesystem and process things ###

[ cwd pl ] \pwd def


### Math and such ###

[ 2 % 0 eq? ] \even? def
[ 2 % 1 eq? ] \odd? def
[ % 0 eq? ] \divisor? def


### Boolean operators ###

[ eq? not ] \neq? def
[ and not ] \nand def
[ or not ] \nor def


### String things ###

[ "" split ] \chars def

[ " " split ] \words def
[ " " join ] \unwords def

[ "\n" split ] \lines def
[ "\n" join ] \unlines def


### Quote manipulation ###

[ deq drop ] \first def
[ pop swap drop ] \last def
[ ... ] \unquote def


### Control flow ###

[ [ cmd n ]:
  0 n gt?   \continue :
  [ cmd do   cmd n 1 - times ] continue do?
] \times def

[ map drop ] \each def

[ [ action cond ]:
  [ action do   action cond while ]   cond do do?
] \while def


### Parsing ###

[ lines [ "," split ] map ] \parse-csv def


### Testing ###

[ [ cond msg ]:   [ msg pl   1 exit ] cond not do? ] \assert-true def
