### Flags and such ###

[ [ action flag ] :
  get-args [ flag eq? ] any?
  action swap ? ] \handle-flag def

[ "dt " p version pl ] \print-version def
[ [ print-version 0 exit ]   "--version" handle-flag ] \--version def

[ "Good luck, this help hasn't been finished yet." pl   0 exit ] \print-help def
[ [ print-help 0 exit ]   "--help" handle-flag ] \--help def

[ --help --version ] \handle-flags def

[ handle-flags
    get-args deq   swap drop   unwords eval ] \run-args def


### REPL things ###

[ handle-flags repl ] \main-repl def
[ "Â» " p   get-line eval   repl ] \repl def
[ .q ] \quit def


### PIPE things ###

[ get-lines   run-args ] \pipe-thru-args def


### Display ###

[ p nl ] \pl def
[ \pl map drop ] \pls def


### Filesystem and process things ###

[ cwd pl ] \pwd def


### Boolean operators ###

[ and not ] \nand def
[ or not ] \nor def


### String things ###

[ "" split ] \chars def

[ " " split ] \words def
[ " " join ] \unwords def

[ "\n" split ] \lines def
[ "\n" join ] \unlines def


### Quote manipulation ###

[ deq drop ] \first def
[ pop swap drop ] \last def


### Control flow ###

[ [ cmd _n ] :
    0 _n gt?   \continue :
    [ cmd do   cmd _n 1 - times ] continue ?
] \times def


### Swizzling and such ###

[ swap \save : do save ] \dip def


### Parsing ###

[ lines [ "," split ] map ] \parse-csv def
